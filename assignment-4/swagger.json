{
  "swagger": "2.0",
  "info": {
    "description": "This is the documentation for the api's for the github gist clone.",
    "version": "1.0.0",
    "title": "Github Gist Clone"
  },
  "host": "githubgist.swagger.io",
  "basePath": "/v1",
  "tags": [
    {
      "name": "authentication",
      "description": "Everything about your authentication"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/login": {
      "post": {
        "tags": ["authentication"],
        "summary": "Log user in",
        "description": "",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials that needs to be provided",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Successfully logged in"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["authentication"],
        "summary": "Log outs the user out of the account",
        "operationId": "logoutUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Successfully logged out"
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get All user notes",
        "operationId": "getAllNotes",
        "responses": {
          "200": {
            "description": "Successfull"
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "summary": "Adds a new note",
        "description": "",
        "operationId": "addNewNote",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "data",
            "in": "formData",
            "description": "content of the note",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "status of the note",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/notes/{noteId}": {
      "get": {
        "tags": ["Notes"],
        "summary": "Find notes by ID",
        "description": "Returns a single note",
        "operationId": "getNoteById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "ID of note to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Note not found"
          }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "summary": "Deletes a pet",
        "description": "",
        "operationId": "deletePet",
        "produces": ["application/xml", "application/json"],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "put": {
        "tags": ["Notes"],
        "summary": "Updates a note",
        "operationId": "updateNoteById",
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "ID of note to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Note": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string",
          "description": "useremail"
        },
        "status": {
          "type": "string",
          "description": "The ype of the note public or private",
          "enum": ["public", "private"]
        },
        "data": {
          "type": "string",
          "description": "The notes of the user"
        }
      }
    }
  }
}
